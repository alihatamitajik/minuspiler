Program -> Declaration-list
Declaration-list -> Declaration Declaration-list | EPSILON
Declaration -> Declaration-initial Declaration-prime
Declaration-initial -> #ptype Type-specifier #pname ID
Declaration-prime -> Fun-declaration-prime | Var-declaration-prime
Var-declaration-prime -> #var ; | [ #pnum NUM ] #arr ;
Fun-declaration-prime -> #func ( Params ) Compound-stmt #func_end
Type-specifier -> int | void
Params -> #ptype int #pname ID Param-prime Param-list | void
Param-list -> , Param Param-list | EPSILON
Param -> Declaration-initial Param-prime
Param-prime -> [ ] #par_ptr | EPSILON #par_var
Compound-stmt -> { Declaration-list Statement-list }
Statement-list -> Statement Statement-list | EPSILON
Statement -> Expression-stmt | #scope_up Compound-stmt #scope_down | Selection-stmt | Iteration-stmt | Return-stmt
Expression-stmt -> Expression #pexpr ; | break ; | ;
Selection-stmt -> if ( Expression ) #save Statement #jpf_save else Statement #jp
Iteration-stmt -> repeat #pbp #label Statement until ( Expression ) #jpf #until
Return-stmt -> return Return-stmt-prime #return
Return-stmt-prime -> ; | Expression #ret_val;
Expression -> Simple-expression-zegond | #pid ID B
B -> = Expression #assign | [ Expression ] #index H | Simple-expression-prime
H -> = Expression #assign | G D C
Simple-expression-zegond -> Additive-expression-zegond C
Simple-expression-prime -> Additive-expression-prime C
C -> #pop Relop Additive-expression #calc | EPSILON
Relop -> < | ==
Additive-expression -> Term D
Additive-expression-prime -> Term-prime D
Additive-expression-zegond -> Term-zegond D
D -> #pop Addop Term #calc D | EPSILON
Addop -> + | -
Term -> Factor G
Term-prime -> Factor-prime G
Term-zegond -> Factor-zegond G
G -> #pop * Factor #calc G | EPSILON
Factor -> ( Expression ) | #pid ID Var-call-prime | #constant NUM
Var-call-prime -> ( Args ) | Var-prime
Var-prime -> [ Expression ] #index | EPSILON
Factor-prime -> #pcount ( Args ) #call | EPSILON
Factor-zegond -> ( Expression ) | #constant NUM
Args -> Arg-list | EPSILON
Arg-list -> Expression #incarg Arg-list-prime
Arg-list-prime -> , Expression #incarg Arg-list-prime | EPSILON